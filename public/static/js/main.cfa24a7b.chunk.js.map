{"version":3,"sources":["API.js","Register.js","Login.js","RegisterPost.js","PostList.js","App.js","reportWebVitals.js","index.js"],"names":["getCurrentUser","a","fetch","response","json","data","login","id","pw","method","headers","body","JSON","stringify","password","register","name","getPosts","offset","limit","createPost","title","content","deletePost","postId","Register","useState","setId","setPassword","setName","message","setMessage","handleRegisterBtnClick","e","success","error","style","border","padding","margin","htmlFor","value","onChange","target","onClick","Login","loading","setLoading","fetchUserInfo","useEffect","handleLoginBtnClick","RegisterPost","onRegister","setTitle","setContent","handleRegisterButtonClick","console","log","PostList","posts","setPosts","page","setPage","totalPage","setTotalPage","fetchPosts","meta","total","Date","toLocaleDateString","handleRefresh","handleDeleteButtonClick","stlye","height","overflow","map","post","display","flexDirection","alignItems","marginBottom","fontSize","marginLeft","color","author","length","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfa24a7b.chunk.js","sourcesContent":["export const getCurrentUser = async () => {\n  const response = await fetch(\"/api/user/me\");\n  const data = await response.json();\n\n  return data;\n};\n\nexport const login = async (id, pw) => {\n  const response = await fetch(\"/api/user/auth\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      id,\n      password: pw,\n    }),\n  });\n  const data = await response.json();\n\n  return data;\n};\n\nexport const register = async (id, pw, name) => {\n  const response = await fetch(\"/api/user/\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      id,\n      password: pw,\n      name,\n    }),\n  });\n  const data = await response.json();\n\n  return data;\n};\n\nexport const getPosts = async (offset, limit = 10) => {\n  const response = await fetch(`/api/post?limit=${limit}&offset=${offset}`);\n  return await response.json();\n};\n\nexport const createPost = async (title, content) => {\n  const response = await fetch(`/api/post`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      title,\n      content,\n    }),\n  });\n  return await response.json();\n};\n\nexport const deletePost = async (postId) => {\n  const response = await fetch(`/api/post/${postId}`, {\n    method: \"DELETE\",\n  });\n  return await response.json();\n};\n","import { useEffect, useState } from \"react\";\nimport { register } from \"./API\";\nconst Register = () => {\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleChangeIdInput = (e) => {\n    setId(e.target.value);\n  };\n  const handleChangePWInput = (e) => {\n    setPassword(e.target.value);\n  };\n  const handleChnageNameInput = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleRegisterBtnClick = async (e) => {\n    const { success, data, error } = await register(id, password, name);\n    if (success) {\n      setMessage(\"생성 완료\");\n    } else {\n      setMessage(error);\n    }\n  };\n  return (\n    <div style={{ border: \"1px solid black\", padding: \"10px\", margin: \"10px\" }}>\n      <label htmlFor=\"id\">ID: </label>\n      <input id=\"id\" value={id} onChange={handleChangeIdInput}></input>\n      <label htmlFor=\"pw\">PW: </label>\n      <input id=\"pw\" value={password} onChange={handleChangePWInput}></input>\n      <label htmlFor=\"name\">Name: </label>\n      <input id=\"name\" value={name} onChange={handleChnageNameInput}></input>\n\n      <button\n        onClick={() => {\n          handleRegisterBtnClick();\n        }}\n      >\n        회원가입\n      </button>\n      <div>{message}</div>\n    </div>\n  );\n};\nexport default Register;\n","import { useState, useEffect } from \"react\";\nimport { login, getCurrentUser } from \"./API\";\n\nconst Login = () => {\n  const [name, setName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const fetchUserInfo = async () => {\n    setLoading(true);\n    const { success, data } = await getCurrentUser();\n    if (success) {\n      setName(data.name);\n    } else {\n      setName(\"\");\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchUserInfo();\n  }, []);\n\n  const handleChangeIdInput = (e) => {\n    setId(e.target.value);\n  };\n  const handleChangePWInput = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLoginBtnClick = async (e) => {\n    setLoading(true);\n    const { success, data } = await login(id, password);\n\n    if (success) {\n      setName(data.name);\n    } else {\n      setName(\"\");\n    }\n    setLoading(false);\n  };\n  return (\n    <div\n      style={{\n        border: \"1px solid black\",\n        padding: \"10px\",\n        margin: \"10px\",\n      }}\n    >\n      <div>{loading && \"로그인 중...\"}</div>\n      {name ? (\n        <div>\n          <h1>{name} 님이 로그인하셨습니다.</h1>\n        </div>\n      ) : (\n        <div>\n          <label htmlFor=\"id\">ID: </label>\n          <input id=\"id\" value={id} onChange={handleChangeIdInput}></input>\n          <label htmlFor=\"pw\">PW: </label>\n          <input\n            id=\"pw\"\n            value={password}\n            onChange={handleChangePWInput}\n          ></input>\n          <button\n            onClick={() => {\n              handleLoginBtnClick();\n            }}\n          >\n            로그인\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Login;\n","import { useState, useEffect } from \"react\";\nimport { createPost } from \"./API\";\n\nconst RegisterPost = ({ onRegister }) => {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [message, setMessage] = useState(\"\");\n\n  const handleRegisterButtonClick = async () => {\n    try {\n      const { success, data, error } = await createPost(title, content);\n      if (success) {\n        setMessage(\"추가 완료.\");\n        onRegister();\n      } else {\n        setMessage(error);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChangeTitle = (e) => setTitle(e.target.value);\n  const handleChnageContent = (e) => setContent(e.target.value);\n\n  return (\n    <div>\n      <h1>게시글 추가</h1>\n      <label htmlFor=\"title\">Title</label>\n      <input id=\"title\" onChange={handleChangeTitle}></input>\n      <label htmlFor=\"content\">Content</label>\n      <input id=\"content\" onChange={handleChnageContent}></input>\n      <button onClick={handleRegisterButtonClick}>등록</button>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default RegisterPost;\n","import { useState, useEffect } from \"react\";\nimport { deletePost, getPosts } from \"./API\";\nimport RegisterPost from \"./RegisterPost\";\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(1);\n\n  const fetchPosts = async (page) => {\n    const { success, data, error } = await getPosts(page, 5);\n    if (success) {\n      const {\n        meta: { total, offset, limit },\n        posts,\n      } = data;\n      setPosts(posts);\n      setPage(offset);\n      setTotalPage(total);\n      setMessage(new Date().toLocaleDateString() + \"데이터 불러오는데 성공 \");\n    } else {\n      setMessage(error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts(page);\n  }, []);\n\n  const handleRefresh = () => {\n    fetchPosts(page);\n  };\n\n  const handleDeleteButtonClick = async (id) => {\n    const { success, error } = await deletePost(id);\n    if (success) {\n      setMessage(\"게시글 삭제에 성공했습니다.\");\n    } else {\n      setMessage(error);\n    }\n    handleRefresh();\n  };\n  return (\n    <>\n      <div\n        style={{\n          border: \"1px solid black\",\n\n          padding: \"10px\",\n          margin: \"10px\",\n        }}\n      >\n        <div stlye={{ height: \"200px\", overflow: \"scroll\" }}>\n          {posts.map((post) => {\n            return (\n              <div\n                key={post.id}\n                style={{\n                  border: \"1px solid gray\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"flex-start\",\n                  padding: \"0px\",\n                  marginBottom: \"3px\",\n                }}\n              >\n                <p style={{ fontSize: \"20px\", padding: \"5px\", margin: \"0px\" }}>\n                  {post.title}\n                </p>\n                <p\n                  style={{\n                    fontSize: \"12px\",\n                    padding: \"0px\",\n                    margin: \"0px\",\n                    marginLeft: \"5px\",\n                    color: \"#c0c0c0\",\n                  }}\n                >\n                  {post.author.name}\n                </p>\n                <p\n                  style={{\n                    fontSize: \"12px\",\n                    padding: \"0px\",\n                    margin: \"0px\",\n                    marginLeft: \"5px\",\n                  }}\n                >\n                  {post.content}\n                </p>\n                <button\n                  onClick={() => {\n                    handleDeleteButtonClick(post.id);\n                  }}\n                >\n                  삭제\n                </button>\n              </div>\n            );\n          })}\n        </div>\n\n        <div>\n          <button onClick={() => fetchPosts(page - 1)}> {\"<\"} </button>\n          {page} / {totalPage}\n          <button onClick={() => fetchPosts(page + 1)}> {\">\"} </button>\n        </div>\n        <p>\n          {message}, {posts.length}개의 게시글{\" \"}\n        </p>\n        <button onClick={handleRefresh}>새로고침</button>\n      </div>\n      <RegisterPost onRegister={() => handleRefresh()} />\n    </>\n  );\n};\nexport default PostList;\n","import \"./App.css\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport PostList from \"./PostList\";\nimport RegisterPost from \"./RegisterPost\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login />\n      <Register />\n      <PostList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}